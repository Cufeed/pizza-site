version: '3.8'

services:
  # База данных PostgreSQL
  db:
    image: postgres:14-alpine
    container_name: pizza-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: pizza
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Инициализация базы данных из дампа
      - ./docker/db/pizza_dump.sql:/docker-entrypoint-initdb.d/pizza_dump.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  # Бэкенд ASP.NET Core API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: pizza-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PizzaConnection=Host=db;Port=5432;Database=pizza;Username=postgres;Password=123
      - Jwt__Key=supersecretkey_that_has_at_least_32_chars
      - Jwt__Issuer=PizzaWebApp
      - Jwt__Audience=PizzaWebAppUsers
      - Jwt__ExpireHours=2
    ports:
      - "5023:80"
    restart: always

  # Фронтенд React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: pizza-web
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: always

volumes:
  postgres-data: 